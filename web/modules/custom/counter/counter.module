<?php
/**
 * @file
 * Primary module hooks for node_view_counter module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\node\NodeInterface;

/**
 * Hook function which alters functionality of hook_ENTITY_TYPE_view() function.
 *
 * @param array $build
 *   A renderable array. 
 * @param NodeInterface $node
 *   Current node object.
 * @param $view_mode
 *   View mode of the current node.
 * 
 * @return void
 */
function counter_node_view(array &$build, NodeInterface $node, $view_mode) {
  // Get the current session.
  $session = \Drupal::request()->getSession();
  // Get the node ID.
  $nid = $node->id();
  // Add the tag to the cache.
  $build['#cache'] = [
    '#cache' => [
      'tags' => ['node:'.$nid,],
    ],
  ];
  // Get the current count from the session.
  $count = $session->get('node_view_count_' . $nid, 0);
  // Increment the count.
  $count++;
  // Store the updated count back in the session.
  $session->set('node_view_count_' . $nid, $count);
  // After session variable increment, Invalidate the tag to show updated value.
  Cache::invalidateTags(['node:'.$nid]);
  // Show the count in status message.
  $messenger = \Drupal::messenger();
  $messenger->addStatus(t('This node has been viewed @count times in this session.', ['@count' => $count]));
}
